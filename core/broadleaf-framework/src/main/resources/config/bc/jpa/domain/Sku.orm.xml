<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  BroadleafCommerce Framework
  %%
  Copyright (C) 2009 - 2023 Broadleaf Commerce
  %%
  Licensed under the Broadleaf Fair Use License Agreement, Version 1.0
  (the "Fair Use License" located  at http://license.broadleafcommerce.org/fair_use_license-1.0.txt)
  unless the restrictions on use therein are violated and require payment to Broadleaf in which case
  the Broadleaf End User License Agreement (EULA), Version 1.1
  (the "Commercial License" located at http://license.broadleafcommerce.org/commercial_license-1.1.txt)
  shall apply.
  
  Alternatively, the Commercial License may be replaced with a mutually agreed upon license (the "Custom License")
  between you and Broadleaf Commerce. You may not use this file except in compliance with the applicable license.
  #L%
  -->

<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd" version="2.0">

    <named-query name="BC_READ_FIRST_SKU" >
        <query>SELECT sku FROM org.broadleafcommerce.core.catalog.domain.Sku sku WHERE sku.id = (SELECT MIN(smallSku.id) FROM org.broadleafcommerce.core.catalog.domain.Sku smallSku)</query>
    </named-query>

    <named-query name="BC_READ_ALL_SKUS">
        <query>SELECT sku FROM org.broadleafcommerce.core.catalog.domain.Sku sku</query>
    </named-query>

    <named-query name="BC_READ_SKU_BY_OUTGOING_URL" >
        <query>SELECT sku
               FROM org.broadleafcommerce.core.catalog.domain.Sku sku
               LEFT JOIN sku.product product
               LEFT JOIN sku.defaultProduct defaultProduct
               WHERE (defaultProduct.url = :url
               OR (product.url = :productUrl AND sku.urlKey = :skuUrlKey))
               AND (sku.activeStartDate IS NOT NULL AND sku.activeStartDate &lt;= :currentDate)
               AND (sku.activeEndDate &gt;= :currentDate OR sku.activeEndDate IS NULL)
               AND (product.archiveStatus.archived IS NULL OR product.archiveStatus.archived = 'N')
        </query>
    </named-query>

</entity-mappings>
